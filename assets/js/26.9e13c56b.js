(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{533:function(a,e,t){"use strict";t.r(e);var v=t(6),s=Object(v.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"elasticsearch-系列-一-介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch-系列-一-介绍"}},[a._v("#")]),a._v(" Elasticsearch 系列（一）介绍")]),a._v(" "),t("h3",{attrs:{id:"一、什么是elasticsearch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、什么是elasticsearch"}},[a._v("#")]),a._v(" 一、什么是Elasticsearch")]),a._v(" "),t("p",[a._v("Elasticsearch 是一个开源的搜索引擎，建立在全文搜索引擎库 Apache Lucene 基础之上。用 Java 编写的，它的内部使用 Lucene 做索引与搜索，但是它的目的是使全文检索变得简单， 通过隐藏 Lucene 的复杂性，取而代之的提供一套简单一致的 RESTful API。")]),a._v(" "),t("p",[a._v("同时ES还是一个分布式文档数据库，其中每个字段均可被索引，而且每个字段的数据均可被搜索，能够横向扩展至数以百计的服务器存储以及处理PB级的数据。")]),a._v(" "),t("p",[a._v("Elasticsearch是一个近乎实时的搜索平台。这意味着从您索引文档到可搜索时，有一个轻微的延迟（通常为一秒钟。Elasticsearch 使用一种被称为倒排索引的数据结构，该结构支持快速全文搜索。在倒排索引里列出了所有文档中出现的每一个唯一单词并分别标识了每个单词在哪一个文档中。")]),a._v(" "),t("h3",{attrs:{id:"二、elasticsearch中的倒排索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、elasticsearch中的倒排索引"}},[a._v("#")]),a._v(" 二、Elasticsearch中的倒排索引")]),a._v(" "),t("p",[a._v("先说明正向索引，比如我们有一本书，通过目录可以找到所有的章节和章节对应的页码，然后我们通过页码可以查看章节的所有内容。如果我们需要在这本书里搜索一个关键词，按照正向索引的方式，我们需要找出所有的章节，通过章节里面所有的内容去找到关键词。如果这本书特别厚，那么这样的搜索方式，在大数据量的情况下肯定是很慢。")]),a._v(" "),t("p",[a._v("而倒排索引索引不同，通过关键词直接建立了倒排索引，可以通过关键词直接找到关键词在这本书里面出现的章节文档编号。所以很显然倒排索引很适合通过倒排索引去搜索的场景。")]),a._v(" "),t("ol",[t("li",[a._v("倒排索引采用的是Immutable Design，一旦生成不可更改。")]),a._v(" "),t("li",[a._v("不可变性，带来的好处如下：\n"),t("ul",[t("li",[a._v("不需要考虑并发写文件的问题，避免了锁机制带来的性能问题")]),a._v(" "),t("li",[a._v("一旦读入内核的文件系统缓存，便留在那里，只要文件系统有足够的空间，大部分请求就会直接请求内存，不会命中磁盘，极大的提高了性能")]),a._v(" "),t("li",[a._v("缓存容易生成，并且数据可以被压缩")])])]),a._v(" "),t("li",[a._v("不可变性，也带来了挑战：如果需要让一个新的文档可以被搜索，需要重建整个索")])]),a._v(" "),t("h3",{attrs:{id:"三、elasticsearch的基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、elasticsearch的基本概念"}},[a._v("#")]),a._v(" 三、Elasticsearch的基本概念")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("Index索引：索引是具有一些相似特征的文档的集合，每个索引有唯一的名字，通过这个名字来操作它。一个集群中可以有任意多个索引。。例如，您可以有一个客户数据索引，另一个产品目录索引，另一个订单数据索引。索引由一个名称标识（必须全部小写），当对索引中文档执行索引、搜索、更新和删除操作时，该索引用于引用索引。")])]),a._v(" "),t("li",[t("p",[a._v("Type: 指在一个索引中，可以索引不同类型的文档，如用户数据、博客数据。从6.0.0 版本起已废弃，一个索引中只存放一类数据。")])]),a._v(" "),t("li",[t("p",[a._v("Document文档：被索引的一条数据，索引的基本信息单元，以JSON格式来表示。索引里面可以添加很多个document")])]),a._v(" "),t("li",[t("p",[a._v("Near Realtime（NRT）： 近实时。数据提交索引后，立马就可以搜索到。")])]),a._v(" "),t("li",[t("p",[a._v("Cluster 集群，一个集群由一个唯一的名字标识，默认为“elasticsearch”。集群名称非常重要，具有相同集群名的节点才会组成一个集群。集群名称可以在配置文件中指定。")])]),a._v(" "),t("li",[t("p",[a._v("Node 节点：存储集群的数据，参与集群的索引和搜索功能。像集群有名字，节点也有自己的名称，默认在启动时会以一个随机的UUID的前七个字符作为节点的名字，你可以为其指定任意的名字。通过集群名在网络中发现同伴组成集群。一个节点也可是集群。")])]),a._v(" "),t("li",[t("p",[a._v("Shard 分片：在创建一个索引时可以指定分成多少个分片来存储。每个分片本身也是一个功能完善且独立的“索引”，可以被放置在集群的任意节点上。")]),a._v(" "),t("ul",[t("li",[a._v("分片的好处：\n"),t("ul",[t("li",[a._v("允许我们水平切分/扩展容量")]),a._v(" "),t("li",[a._v("可在多个分片上进行分布式的、并行的操作，提高系统的性能和吞吐量。")])])])]),a._v(" "),t("p",[a._v("注意：分片数创建索引时指定，创建后不可改了。备份数可以随时改。\nReplication 备份: 一个分片可以有多个备份（副本）。备份的好处：\n高可用。一个主分片挂了，副本分片就顶上去\n扩展搜索的并发能力、吞吐量。搜索可以在所有的副本上并行运行。-高并发下副本也可搜索")])])]),a._v(" "),t("h3",{attrs:{id:"四、elasticsearch的特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、elasticsearch的特点"}},[a._v("#")]),a._v(" 四、Elasticsearch的特点")]),a._v(" "),t("p",[a._v("速度快、易扩展、弹性、灵活、操作简单、多语言客户端、X-Pack、hadoop/spark强强联手、开箱即用。")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("分布式：横向扩展非常灵活")])]),a._v(" "),t("li",[t("p",[a._v("全文检索：基于lucene的强大的全文检索能力；")])]),a._v(" "),t("li",[t("p",[a._v("近实时搜索和分析：数据进入ES，可达到近实时搜索，还可进行聚合分析")])]),a._v(" "),t("li",[t("p",[a._v("高可用：容错机制，自动发现新的或失败的节点，重组和重新平衡数据")])]),a._v(" "),t("li",[t("p",[a._v("模式自由：ES的动态mapping机制可以自动检测数据的结构和类型，创建索引并使数据可搜索。")])]),a._v(" "),t("li",[t("p",[a._v("RESTful API：JSON + HTTP")])]),a._v(" "),t("li",[t("p",[a._v("可以作为一个大型分布式集群（数百台服务器）技术，处理PB级数据，服务大公司；也可以运行在单机上，服务小公司")])])]),a._v(" "),t("h3",{attrs:{id:"五、elasticsearch的常见应用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、elasticsearch的常见应用场景"}},[a._v("#")]),a._v(" 五、Elasticsearch的常见应用场景")]),a._v(" "),t("ul",[t("li",[a._v("站内搜索，比如电商网站的商品搜索")]),a._v(" "),t("li",[a._v("Nosql数据库")]),a._v(" "),t("li",[a._v("日志分析")]),a._v(" "),t("li",[a._v("数据分析")])]),a._v(" "),t("h3",{attrs:{id:"六、elasticsearch的架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#六、elasticsearch的架构"}},[a._v("#")]),a._v(" 六、Elasticsearch的架构")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/aaronTang98/image_store/blog/elasticsearch%E6%9E%B6%E6%9E%84.png",alt:"elasticsearch架构"}})]),a._v(" "),t("p",[a._v("说明:")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("Gateway：是ES用来存储索引的文件系统，支持多种类型。在Gateway中，ES默认先把索引存储在内存中，然后当内存满的时候，再持久化到Gateway里。当ES集群关闭或重启的时候，它就会从Gateway里去读取索引数据。比如LocalFileSystem和HDFS、AS3等。")]),a._v(" "),t("p",[a._v("Gateway的上层是一个分布式的lucene框架。")])]),a._v(" "),t("li",[t("p",[a._v("DistributedLucene Directory：它是Lucene里的一些列索引文件组成的目录。它负责管理这些索引文件。包括数据的读取、写入，以及索引的添加和合并等。")]),a._v(" "),t("p",[a._v("Lucene之上是ES的模块，包括：索引模块、搜索模块、映射解析模块等")])]),a._v(" "),t("li",[t("p",[a._v("Index Moudle：索引模块，支持索引的一些常用操作")])]),a._v(" "),t("li",[t("p",[a._v("Search Moudle：搜索模块，支持搜索的一些常用操作")])]),a._v(" "),t("li",[t("p",[a._v("Mapping：不仅是告诉ES，哪个字段是哪种类型。还能告诉ES如何来索引数据，以及数据是否被索引到等。")])]),a._v(" "),t("li",[t("p",[a._v("River：代表是数据源。是以插件的形式存在于ES中。")]),a._v(" "),t("p",[a._v("ES模块之上是 Discovery、Scripting和第三方插件。")])]),a._v(" "),t("li",[t("p",[a._v("Discovery：是ES的节点发现模块，不同机器上的ES节点要组成集群需要进行消息通信，集群内部需要选举master节点，这些工作都是由Discovery模块完成。支持多种发现机制，如 Zen 、EC2、gce、Azure。")])]),a._v(" "),t("li",[t("p",[a._v("Scripting：用来支持在查询语句中插入javascript、python等脚本语言，scripting模块负责解析这些脚本，使用脚本语句性能稍低。ES也支持多种第三方插件。")]),a._v(" "),t("p",[a._v("再上层是ES的传输模块和JMX.传输模块支持多种传输协议，如 Thrift、memecached、http，默认使用http。JMX是java的管理框架，用来管理ES应用。\n最上层是ES提供给用户的接口，可以通过RESTful接口和ES集群进行交互。")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);