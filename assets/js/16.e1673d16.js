(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{523:function(n,e,s){"use strict";s.r(e);var i=s(6),a=Object(i.a)({},(function(){var n=this,e=n.$createElement,s=n._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h2",{attrs:{id:"jenkins介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jenkins介绍"}},[n._v("#")]),n._v(" jenkins介绍")]),n._v(" "),s("p",[n._v("本导读将向您介绍使用 Jenkins、Jenkins 的主要特性和 Jenkins Pipeline 的基本知识。 本导读使用“独立”的 Jenkins 发行版，它可以在您自己本地的机器上运行。")]),n._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/aaronTang98/image_store/blog/jenkins.png",alt:"jenkins"}})]),n._v(" "),s("h2",{attrs:{id:"jenkins-部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jenkins-部署"}},[n._v("#")]),n._v(" jenkins 部署")]),n._v(" "),s("p",[n._v("建议使用的Docker映像是 jenkinsci/blueocean image来自 the "),s("a",{attrs:{href:"https://hub.docker.com/r/jenkinsci/blueocean",target:"_blank",rel:"noopener noreferrer"}},[n._v("Docker Hub repository"),s("OutboundLink")],1),n._v("。 该镜像包含当前的长期支持 (LTS) 的Jenkins版本 （可以投入使用） ，捆绑了所有Blue Ocean插件和功能。这意味着你不需要单独安装Blue Ocean插件。")]),n._v(" "),s("blockquote",[s("p",[n._v("jenkinsci/blueocean每次发布Blue Ocean新版本时，都会发布新镜像。您可以在标签 page页上看到以前发布的镜像版本列表 。")])]),n._v(" "),s("p",[n._v("您还可以使用其他Jenkins Docker镜像（在Docker Hub上可通过jenkins/jenkins获取）。 但是，这些不会随Blue Ocean的发布而提供，需要通过 Jenkins中的Manage Jenkins > Manage Plugins页面进行安装。 在Blue Ocean入门中了解更多信息。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("\ndocker pull jenkinsci/blueocean\n\ndocker run \n\n  -u root \n\n  --rm \n\n  -d \n\n  -p 8081:8080 \n\n  -p 50000:50000 \n\n  -v /u01/data/jenkins-data:/var/jenkins_home \n\n  -v /var/run/docker.sock:/var/run/docker.sock \n\n  jenkinsci/blueocean\n\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br")])]),s("p",[n._v("说明：")]),n._v(" "),s("ul",[s("li",[s("p",[s("code",[n._v("--rm")]),n._v(" （可选） jenkinsci/blueocean 关闭时自动删除Docker容器（下图为实例）。如果您需要退出Jenkins，这可以保持整洁。")])]),n._v(" "),s("li",[s("p",[s("code",[n._v("-d")]),n._v("（可选）jenkinsci/blueocean 在后台运行容器（即“分离”模式）并输出容器ID。如果您不指定此选项， 则在终端窗口中输出正在运行的此容器的Docker日志。")])]),n._v(" "),s("li",[s("p",[s("code",[n._v("-p 8080:8080")]),n._v(" 映射（例如“发布”）jenkinsci/blueocean 容器的端口8080到主机上的端口8080。 第一个数字代表主机上的端口，而最后一个代表容器的端口。因此，如果您为此选项指定 -p 49000:8080 ，您将通过端口49000访问主机上的Jenkins。")])]),n._v(" "),s("li",[s("p",[s("code",[n._v("-p 50000:50000")]),n._v("（可选）将 jenkinsci/blueocean 容器的端口50000 映射到主机上的端口50000。 如果您在其他机器上设置了一个或多个基于JNLP的Jenkins代理程序，而这些代理程序又与 jenkinsci/blueocean 容器交互（充当“主”Jenkins服务器，或者简称为“Jenkins主”）， 则这是必需的。默认情况下，基于JNLP的Jenkins代理通过TCP端口50000与Jenkins主站进行通信。")])])]),n._v(" "),s("p",[n._v("​\t您可以通过“ 配置全局安全性” 页面更改Jenkins主服务器上的端口号。如果您要将您的Jenkins主机的JNLP代理端口的TCP端口 值更改为51000（例如），那么您需要重新运行Jenkins（通过此 docker run …命令）并指定此“发布”选项 -p 52000:51000，其中最后一个值与Jenkins master上的这个更改值相匹配，第一个值是Jenkins主机的主机上的端口号， 通过它，基于JNLP的Jenkins代理与Jenkins主机进行通信 - 例如52000。")]),n._v(" "),s("ul",[s("li",[s("p",[s("code",[n._v("-v jenkins-data:/var/jenkins_home")]),n._v("（可选，但强烈建议）映射在容器中的"),s("code",[n._v("/var/jenkins_home")]),n._v(" 目录到具有名字 jenkins-data 的volume。 如果这个卷不存在，那么这个 docker run 命令会自动为你创建卷。 如果您希望每次重新启动Jenkins（通过此 docker run ... 命令）时保持Jenkins状态，则此选项是必需的 。 如果你没有指定这个选项，那么在每次重新启动后，Jenkins将有效地重置为新的实例。")])]),n._v(" "),s("li",[s("p",[s("code",[n._v("-v /var/run/docker.sock:/var/run/docker.sock")]),n._v("（可选 /var/run/docker.sock 表示Docker守护程序通过其监听的基于Unix的套接字。 该映射允许jenkinsci/blueocean 容器与Docker守护进程通信， 如果 jenkinsci/blueocean 容器需要实例化其他Docker容器，则该守护进程是必需的。 如果运行声明式管道，其语法包含agent部分用 docker")])])]),n._v(" "),s("blockquote",[s("p",[n._v("例如， agent { docker { ... } } 此选项是必需的。 在Pipeline Syntax 页面上阅读更多关于这个的信息 。")])]),n._v(" "),s("p",[n._v("jenkinsci/blueocean Docker镜像本身。如果此镜像尚未下载，则此 docker run 命令 将自动为您下载镜像。此外，如果自上次运行此命令后发布了此镜像的任何更新， 则再次运行此命令将自动为您下载这些已发布的镜像更新。 注意：这个Docker镜像也可以使用以下 docker pull命令独立下载（或更新） ： docker pull")]),n._v(" "),s("h2",{attrs:{id:"安装后设置向导"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装后设置向导"}},[n._v("#")]),n._v(" 安装后设置向导")]),n._v(" "),s("p",[n._v("下载安装并运行Jenkins后，即将开始进入安装向导。")]),n._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/aaronTang98/image_store/blog/jenkins01.jpg",alt:"jenkins01"}})]),n._v(" "),s("p",[n._v("此安装向导会引导您完成几个快速“一次性”步骤来解锁Jenkins， 使用插件对其进行自定义，并创建第一个可以继续访问Jenkins的管理员用户。")]),n._v(" "),s("p",[n._v("解锁 Jenkins")]),n._v(" "),s("p",[n._v("当您第一次访问新的Jenkins实例时，系统会要求您使用自动生成的密码对其进行解锁。")]),n._v(" "),s("p",[n._v("浏览到 http://ip:8081（或安装时为Jenkins配置的任何端口），并等待 解锁 Jenkins 页面出现。")]),n._v(" "),s("p",[n._v("Unlock Jenkins page")]),n._v(" "),s("p",[n._v("获取密码：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("\ncd /u01/data/jenkins-data\n\ncat secrets/initialAdminPassword\n\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br")])]),s("p",[n._v("在 解锁Jenkins 页面上，将此 密码 粘贴到管理员密码字段中，然后单击 继续 。")]),n._v(" "),s("blockquote",[s("p",[n._v("Notes:")])]),n._v(" "),s("p",[n._v("如果您以分离模式在Docker中运行Jenkins，则可以从Docker日志（above） 访问Jenkins控制台日志。")]),n._v(" "),s("p",[n._v("Jenkins控制台日志显示可以获取密码的位置（在Jenkins主目录中）。 必须在新Jenkins安装中的安装向导中输入此密码才能访问Jenkins的主UI。 如果您在设置向导中跳过了后续的用户创建步骤， 则此密码还可用作默认admininstrator帐户的密码（使用用户名“admin”）")]),n._v(" "),s("h2",{attrs:{id:"自定义jenkins插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义jenkins插件"}},[n._v("#")]),n._v(" 自定义jenkins插件")]),n._v(" "),s("p",[n._v("解锁 Jenkins之后，在 Customize Jenkins 页面内， 您可以安装任何数量的有用插件作为您初始步骤的一部分。")]),n._v(" "),s("p",[n._v("两个选项可以设置:")]),n._v(" "),s("ul",[s("li",[s("p",[n._v("安装建议的插件 - 安装推荐的一组插件，这些插件基于最常见的用例.")])]),n._v(" "),s("li",[s("p",[n._v("选择要安装的插件 - 选择安装的插件集。当你第一次访问插件选择页面时，默认选择建议的插件。")])])]),n._v(" "),s("blockquote",[s("p",[n._v("如果您不确定需要哪些插件，请选择 安装建议的插件 。 您可以通过Jenkins中的Manage Jenkins > Manage Plugins 页面在稍后的时间点安装（或删除）其他Jenkins插件 。")])]),n._v(" "),s("p",[n._v("设置向导显示正在配置的Jenkins的进程以及您正在安装的所选Jenkins插件集。这个过程可能需要几分钟的时间")]),n._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/aaronTang98/image_store/blog/jenkins02.jpg",alt:"jenkins02"}})]),n._v(" "),s("h2",{attrs:{id:"创建第一个管理员用户"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建第一个管理员用户"}},[n._v("#")]),n._v(" 创建第一个管理员用户")]),n._v(" "),s("p",[n._v("最后，在customizing Jenkins with plugins之后，Jenkins要求您创建第一个管理员用户。 . 出现“ 创建第一个管理员用户 ”页面时， 请在各个字段中指定管理员用户的详细信息，然后单击 保存完成 。 . 当 Jenkins准备好了 出现时，单击开始使用 Jenkins。")]),n._v(" "),s("blockquote",[s("p",[n._v("Notes: 这个页面可能显示 Jenkins几乎准备好了! 相反，如果是这样，请单击 重启 。如果该页面在一分钟后不会自动刷新，请使用Web浏览器手动刷新页面。如果需要，请使用您刚刚创建的用户的凭据登录到Jenkins，并准备好开始使用Jenkins！")])]),n._v(" "),s("p",[n._v("从这时起，Jenkins用户界面只能通过提供有效的用户名和密码凭证来访问。")])])}),[],!1,null,null,null);e.default=a.exports}}]);